from PIL import Image

def encrypt_image(input_image_path, output_image_path, key):
    image = Image.open(input_image_path)
    encrypted_image = Image.new("RGB", image.size)
    
    for x in range(image.width):
        for y in range(image.height):
            r, g, b = image.getpixel((x, y))
            # Encrypt the pixel using a simple addition
            encrypted_pixel = (r + key) % 256, (g + key) % 256, (b + key) % 256
            encrypted_image.putpixel((x, y), encrypted_pixel)

    encrypted_image.save(output_image_path)
    print(f"Image encrypted and saved as {output_image_path}")

def decrypt_image(input_image_path, output_image_path, key):
    image = Image.open(input_image_path)
    decrypted_image = Image.new("RGB", image.size)
    
    for x in range(image.width):
        for y in range(image.height):
            r, g, b = image.getpixel((x, y))
            # Decrypt the pixel by subtracting the key
            decrypted_pixel = (r - key) % 256, (g - key) % 256, (b - key) % 256
            decrypted_image.putpixel((x, y), decrypted_pixel)

    decrypted_image.save(output_image_path)
    print(f"Image decrypted and saved as {output_image_path}")

if _name_ == "_main_":
    action = input("Type 'encrypt' to encrypt an image or 'decrypt' to decrypt an image: ")
    image_path = input("Enter image path: ")
    output_path = input("Enter output image path: ")
    key = int(input("Enter encryption/decryption key (0-255): "))

    if action == 'encrypt':
        encrypt_image(image_path, output_path, key)
    elif action == 'decrypt':
        decrypt_image(image_path, output_path, key)
    else:
        print("Invalid action. Please choose 'encrypt' or 'decrypt'.")
